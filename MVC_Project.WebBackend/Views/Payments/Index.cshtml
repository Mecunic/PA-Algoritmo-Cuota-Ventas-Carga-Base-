@model  MVC_Project.WebBackend.Models.PaymentViewModel
@{
    ViewBag.Title = "Reporte de Pagos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/dataTablesStyles")
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>@ViewLabels.LABEL_SEARCH</h5>
                </div>
                <div class="ibox-content m-b-sm border-bottom">
                    @using (Html.BeginForm("GetAllByFilter", "Payments", FormMethod.Post, new { @id = "searchForm" }))
                    {
                        <div class="row">
                            <div class="col-sm-6 col-lg-4">
                                <div class="form-group">
                                    <label class="col-form-label" for="OrderId">N&uacute;mero de Orden</label>
                                    @Html.TextBoxFor(m => m.OrderId, new { @Class = "form-control form-control-sm txtFiltro", maxlength = "40" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label class="col-form-label" for="FilterInitialDate">Fecha de Creación</label>
                                    @Html.EditorFor(m => m.FilterDate, new { @cssClass = "form-control-sm form-control" })
                                </div>
                            </div>
                            <div class="col-6 offset-6 text-right">
                                <button type="button" id="btnSearchForm" class="btn btn-sm btn-primary"><i class="fa fa-search"></i> @ViewLabels.LABEL_SEARCH</button>
                                &nbsp;
                                <button type="button" id="btnClearForm" class="btn btn-sm btn-default"><i class="fa fa-eraser "></i> @ViewLabels.LABEL_CLEAN</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>@ViewLabels.LABEL_RESULTS</h5>
                    <div class="ibox-tools" id="tblButtonsResults">
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="table-responsive">
                        <table id="tblResults" class="table table-striped table-bordered table-hover"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/validate")
    <script src="~/Scripts/Utils.js"></script>
    <script src="~/Scripts/views/template/ReporteIndex.js"></script>
    
    <script>
        $(function () {
            var columns = [
                { data: 'Id', title: "Id", visible: false },
                { data: 'OrderId', title: "ID Orden" },
                { data: 'CreationDate', title: "Fecha/Hora de Creación" },
                { data: 'User', title: "Usuario" },
                { data: 'Amount', title: "Monto" },
                { data: 'PaymentMethod', title: "Método" },
                {
                    data: 'Status', title: "Estatus", render: function (data, type, row, meta) {
                        if (data == 'completed') {
                            return '<span class="label label-primary">Exitoso</span>';
                        }
                        if (data == 'in_progress' || data == 'charge_pending') {
                            return '<span class="label label-warning">Pendiente</span>';
                        }
                        if (data == 'Error' || data == 'error') {
                            return '<span class="label label-danger">Error</span>';
                        }
                        return data;
                    }
                },
                { data: 'ConfirmationDate', title: "Fecha/Hora de Confirmación" },
                { data: 'ProviderId', title: "ID Proveedor" }
            ];
            var buttonsOptions = {};
            buttonsOptions.excel = true;
            buttonsOptions.pdf = true;
            var reporteCtrl = new ReporteIndexControlador(columns, buttonsOptions);
            reporteCtrl.init();

        });

    </script>
}

