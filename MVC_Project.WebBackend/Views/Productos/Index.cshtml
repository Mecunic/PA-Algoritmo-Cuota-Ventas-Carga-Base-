@model  MVC_Project.WebBackend.Models.ProductoViewModel

@{
    ViewBag.Title = "Administración de Productos";
}
@section styles {
    @Styles.Render("~/plugins/dataTablesStyles")
    @Styles.Render("~/Content/template/plugins/chosen/chosenStyles")
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-12">
            <div class="ibox float-e-margins">
                @using (Html.BeginForm("GetAllByFilter", "Productos", FormMethod.Post, new { @id = "SearchForm" }))
                {
                    <div class="ibox-title">
                        <div class="row">
                            <div class="col-sm-6 col-xs-12">
                                <div class="form-group row">
                                    <label class="col-lg-2 col-sm-3">Productos</label>
                                    <div class="col-lg-10 col-sm-9">
                                        @Html.TextBoxFor(m => m.Filtro, new { @Class = "form-control form-control-sm txtFiltro", maxlength = "100", filtro = "true", filtro_order = "1" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xs-12">
                                <button type="button" id="btnSearchForm" class="btn btn-sm btn-primary btn-filter">Buscar</button>
                                <button type="button" class="btn btn-create btn-primary float-right"><span class="fas fa-plus"></span> Crear</button>
                                <button type="button" class="btn btn-create btn-secondary float-right"><span class="fas fa-file-export"></span> Exportar</button>
                                <div class="clearfix"></div>
                            </div>

                        </div>
                    </div>
                    <div class="ibox-content clearfix">


                        <div class="table-responsive">
                            <table id="table" class="table table-striped table-bordered table-hover"></table>
                        </div>

                    </div>
                }
            </div>
        </div>

    </div>
</div>

<div id="modal-create" class="modal fade hidden-print" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Crear Usuario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="btn-cancel" data-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="btn-save">Guardar</button>
            </div>

        </div>
    </div>
</div>

@section scripts{

    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/fullCalendar")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/validateUnobtrusive")
    @Scripts.Render("~/custom/Utils")
    @Scripts.Render("~/plugins/chosen")
    <script src="~/Scripts/views/productos/Index.js"></script>

    <script>
        var tableCtrl;
        $(function () {
            tableCtrl = new ProductoIndexControlador('table', '@Url.Action("GetAllByFilter")');
            tableCtrl.init();
        });
        const utils = new Utils();
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });


        $("#btnClearForm").click(function () {
            $("#SearchForm").each(function () {
                this.reset();
            });
            $('#table').DataTable().draw();
        });

        $(".btn-filter").click(function () {
            $('#table').DataTable().draw();
        });

        @*$(".btn-create").click(function (e) {
            e.preventDefault();
            let modalCreate = $("#modal-create");
            modalCreate.find('.modal-body').load('@Url.Action("Create")', function (response, status, xhr) {
                if (status == "error") {
                    return;
                }
                modalCreate.modal("show");
                $('.chosen-select').chosen({ width: '100%' });
            });
        });

        function submitCreate(form,url,method) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: url,
                    method: method,
                    data: form.serialize(),
                    dataType: "json"
                }).done(function (data) {
                    resolve(data);
                }).fail(function (jqXHR, error) {
                    reject(jqXHR);
                });
            });
        }

            $("#btn-save").click(function (e) {
                e.preventDefault();
                    let form = $("#save-form");
                    let modal = $("#modal-create");
                    submitCreate(form, '@Url.Action("create","user")','POST').then(function (data) {
                            form.find("span.field-validation-error").attr("class", "field-validation-valid");
                            form.find("span.field-validation-error").empty();
                            modal.modal("hide");
                        toastr["success"](data.Message);
                        tableCtrl.dataTable.ajax.reload();
                        }).catch(function (data) {
                            if (data.status == 422) {
                                form.find("span[id*='error']").html('');
                                dataObj = data.responseJSON;
                                dataObj.errors.forEach(function (error) {
                                    let span = form.find("span[data-valmsg-for='" + error.propertyName + "']");
                                    span.attr("class", "field-validation-error");
                                    let idMessage = error.propertyName + "-error";
                                    let spanMessage = span.find("#" + idMessage);
                                    if (spanMessage.length <= 0) {
                                        spanMessage = $("<span style=\"color:#f00;\"></span>");
                                        spanMessage.attr('id', idMessage);
                                        span.append(spanMessage);
                                    }
                                    spanMessage.html(error.errorMessage);
                                });
                            } else {
                                modal.modal("hide");
                                tableCtrl.dataTable.ajax.reload();
                            }
                        });
            });
        *@

    </script>

}
